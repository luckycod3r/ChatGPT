const { Action } = require("./actions");
const { BTNS } = require("./buttons");
const { buildKeyBoard } = require("./keyboard");


function checkAction(msg, id){
 
    if(msg == BTNS.GPT){
      tab = "gpt";
      startSession("chat");
      bot.sendMessage(id,"–ß–∞—Ç —Å –ò–ò –Ω–∞—á–∞—Ç, –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ –≤–æ–ø—Ä–æ—Å—ã",{
        reply_markup : {
          keyboard : buildKeyBoard(),
          one_time_keyboard : true
        }
      });
    }
    else if(msg == BTNS.IMAGE){
      tab = "image";
      bot.sendMessage(id,"–ß–∞—Ç —Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º –∫–∞—Ä—Ç–∏–Ω–æ–∫ –Ω–∞—á–∞—Ç, –º–æ–∂–µ—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å—ã",{
        reply_markup : {
          keyboard : buildKeyBoard(),
          one_time_keyboard : true
        }
      });
    }
    else if(msg == BTNS.CLOSE){
      
      startSession("closed");
      if(tab == "gpt" || tab == "image"){
        bot.sendMessage(id,"–ß–∞—Ç –∑–∞–∫—Ä—ã—Ç",{
        
            reply_markup : {
              keyboard : buildKeyBoard(),
              one_time_keyboard : true
            }
          });
      }
      
      tab = "main";
    }
    else if(msg == BTNS.BALANCE){
        Action.getBalance(id)
    }
    else if(msg == BTNS.ACTIVATE_PROMO){
        tab = "promo";
      
      bot.sendMessage(id,"–í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º–æ–∫–æ–¥", {
        reply_markup : {
            keyboard : buildKeyBoard(),
            one_time_keyboard : true
        }
      });
    }
    else if(tab != "promo" && tab != "gpt" && tab != "image"){
      bot.sendMessage(id,"üïπ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ", {
        reply_markup : {
          keyboard : buildKeyBoard(),
          one_time_keyboard : true
        }
      })
    }
  
  }

module.exports = {checkAction};